3.3 写最优估计大作业 做激光雷达ppt
3.4 与胡老师讨论论文 完成最优估计大作业 安装matlab2019b
3.8-3.9 去北京送材料
3.11 安装office 写introduction的翻译
3.12 翻译结束问题假设 刷了3道leetcode
3.13 翻译3章节 并且下载mathtype 刷了2道leetcode
3.14 完成introduction 刷了8道leetcode
3.15 完成问题描述 刷了2道leetcode
3.16 刷了三道leetcode
3.17 修改论文第三节 刷了四道leetcode
3.18 与胡老师讨论 做了两道leetcode
3.19 打扫整理实验室 补充完实验平台
3.20 刷了4道leetcode
3.21 刷了2道leetcode
3.25 完成了轨迹生成部分 
3.26 完成了实验的一部分
3.27 去油菜花田完成中特调研
3.28 市里过生日 晚上补党支部材料
3.29 补党支部材料 刷了3个leetcode
3.30 刷了一道leetcode
3.31 刷了一道leetcode
4.1 刷了一道leetcode
4.4 刷了一道leetcode
4.6 修改论文路径规划实验部分
4.7 刷了一道leetcode 胡老师讨论论文
4.8 刷了两道leetcode  论文的坐标转换
4.14 刷一 leetcode 看了迪杰斯特拉算法
4.15 刷三leetcode 看A*算法
4.16 刷3leetcode
4.22 刷了一道dpleetcode
4.23 刷了一道dpleetcode
4.24 研究jerk
4.25 解决雷达问题
4.26 解决jerk问题 
4.27 解决A*问题 一道
4.28 复习随机过程

6.7 补刷昨天力扣 完成光电吊舱的调研
6.8 两道leetcode 开始slam十四讲
6.9 两道leetcode
6.10 背包问题自己解决 +1leetcode


6.12 三道leetcode 单调栈问题
6.13 2道leetcode
6.14 3
6.15 2
6.16 2
6.17 2
6.18 2
6.19 2（回溯问题）
6.20 2
6.21 2（滑动窗口）
6.22 2  
6.23 2 
6.24 3 python大作业
6.25 2
6.26 3（BFS）
6.27 3
6.28 2
6.29 2（双指针 递归）
6.30 1
7..1 2
7.2 1
7.6 3 map对key进行排序，用结构体或者lambda表达式？
7.7 3
7.8 2
7.9 1
7.10 1
7.11 2
7.12 2（二分查找）
7.13 1（扫描线）
7.14 4（尝试周赛）
7.15 4
7.16 6
7.17 3
7.18 3
7.19 2（动态滑窗）
7.20 2
7.21 1
7.22 4（链表初始化和复制）
7.23 3 （差分数组）（二叉树1）
7.24 3 +1（竞赛简单题）
7.25 3 + 3（竞赛题）
7.26 1（最长公共子串和子序列）+1（二叉树序列化）+1（差分）

8.24 787 K站中转最便宜的班次
使用Bellman-Ford算法 和floyd算法类似 前者是单源最短路径并且可以处理k次边限制 后者是多源最短路径
使用结构体来存储图
8.25 每日一题简单的回溯
1928. 规定时间内到达终点的最小花费
动态规划解决有限制性的图最小价值问题
8.26 每日一题 贪心(田忌赛马) 解决了矩形里面的最值问题

8.27 295 数据流的中位数（hard）一开始使用vector 每次进行sort 但这样做没必要 因为每次只需要对一个元素进行排序 所以选择使用优先级队列 又因为牵扯到中位数 所以选择使用一个大顶堆和一个小顶堆进行操作

743 用数组模拟邻接表存图 使用优先级队列实现dijkstra

8.28 每日一题简单前缀和
打家劫舍系列
1 记忆化搜索和dp都能轻松解决
2 环形数组或者链表的处理 分成三种情况讨论 去掉特殊情况（头尾） 单独求取中间的房间的情况
3 进化到树这个结构 更适合使用记忆化搜索

继续学习最短路 Bellman-Floyd算法 可以使用再负权路中 两个用处 1：单源点的最短路径求取 可以限制路径的边数 2：判断图中是否存在回路 如果一个图中存在回路 那么进行n-1次松弛之后，依然可以继续松弛

最小生成树
一个连通图由n个顶点构成，只有n-条边，是生成树 其中权值最小的为最小生成树
最小生成树的两种方法 Prim和Kruskal算法

1584. 连接所有点的最小费用
使用Prim方法实现最小生成树（借鉴dijkstra算法的dist数组，不断的扩展节点生成一颗最小树）

8.29 
每日一题 简单前缀和 遇到数组多次求区间和 使用前缀和
打周赛的最后一题 解决不同子序列系列问题
不同子序列1 这种匹配两个字符串的问题一定不能用暴力枚举 要从每个字符的角度下手

不同子序列2 and 5857. 不同的好子序列数目
巧妙的dp解法 用于求取超长字符串的子序列数目（字符串中的元素需要是有限的，比如数字或者字母）

8.30 
每日一题 奇怪的设计题，使用随机数，学到了一手 rand()%n 即从0-n-1产生随机数
并查集的学习 
130 使用dfs和bfs都能做 岛屿问题中的连通问题 使用UF也可以解决类似的dfs问题
1584 最小生成树使用UF来实现

9.1 
每日一题 简单的字符串模拟题 使用substr截取字符串 substr(pos,num)从pos开始截取num个字符 以及stoi的应用 stoi会自动忽略前导0 但是考虑如果字符的大小超过了32位int 该函数会失效 只能用字符来模拟
滑动窗口
78 最小覆盖子串 基础的滑窗操作 注意如何判断两个字符串匹配 使用valid参数 每匹配到一个字符就+1 直到t中所有不重复字符匹配成功截至
567 字符串排列 滑窗的大小固定 所以每次向右扩展都需要向左扩展
438 找所有字母异位词 和567相同


9.2 
每日一题 链表的双指针问题寻找倒数的点 也能用递归查找
买卖股票
主要是用状态机 就是DP table找到所有的状态
121 这道题的状态有2个 一个是天数 一个是选择状态 即1代表今天拥有 0代表今天不拥有
dp[i][0]=max(dp[i-1][0],dp[i-1][1]+prices[i]) 第i天没有股票有两种情况 1）第i-1天无股票且第i天无股票 2）第i-1天有股票且第i天卖出
dp[i][1]=max(dp[i-1][1],-prices[i]) 第i天有股票有两种情况 1）第i-1有股票且第i天不卖出 2）第i-1天无股票且第i天买入 PS：因为只能买卖一次，所以买入之前不能有利润，即不能写为dp[i][0]-price[i]
122 此题和上一题唯一区别在于可以无限买卖 所以转移方程为dp[i][1]=max(dp[i-1][1],dp[i][0]-prices[i])
123 188 有了买卖次数k的限制 状态转移方程如下：
dp[i][k][0] = max(dp[i-1][k][0], dp[i-1][k][1] + prices[i])
dp[i][k][1] = max(dp[i-1][k][1], dp[i-1][k-1][0] - prices[i])
比较困难的是base case的分析
309 加入了一个限制条件 在卖出之后第二天不能买入 所以状态方程变为如下：
dp[i][k][0] = max(dp[i-1][k][0], dp[i-1][k][1] + prices[i])
dp[i][k][1] = max(dp[i-1][k][1], dp[i-2][k-1][0] - prices[i])
为什么是i-2 第i-1天不能卖出股票 那么dp[i-1][0]=dp[i-2][0] 
714 只是在每次卖出的时候添加一个-fee
总结：这种题主要还是要找出所有状态 包括天数 是否拥有股票 是否有买卖的次数

9.3 
每日一题
排序 可以使用sort 也可以使用堆排序 不过在使用堆排序时可以固定堆的数量 降低时间复杂度 从一个堆中插入数据的时间复杂度为logN N为堆的大小
895 最大频率栈
设计题是一种有意思的题 首先要弄懂c++类的相关知识 然后要根据题中要求的功能用类似的数据结构和算法进行实现

9.4 
每日一题
简单的斐波拉契数
72 编辑距离 
对于字符串的编辑距离 要具体到字符来处理 可以使用递归来处理 对于每一个字符只有四个操作 跳过 插入 删除 替换 

9.5
每日一题
第一次接触拒绝采样的题 文章基于这样一个事实 (randX() - 1)*Y + randY() 可以等概率的生成[1, X * Y]范围的随机数 randX()的范围[1, X]，randx()-1的范围就是[0, X-1]。(randx() - 1) * Y的范围是[0, (X-1)*Y]，(randx() - 1) * Y + randY()的范围自然就是[1, X * Y]
竞赛第二题 使用单调栈
1373. 二叉搜索子树的最大键值和
从一开始的多个功能函数以及递归函数中调用递归 到最后使用一个后序遍历解决问题 一定要尽可能避免在递归中使用递归

9.6
每日一题 简单二分
补竞赛题 1997. 访问完所有房间的第一天
阿里之前的面试题 非常不明显的dp问题
5866. 数组的最大公因数排序
并查集问题 难点在于如何merge 一开始我采用merge位置 但是超时了 其实应该merge数值 对于每一个质因数进行merge

关于这个class中static的问题 csdn有这样的解释
只是在class里面才需要这么写，因为普通类成员函数，都不能以函数指针的方式作为其他函数的入口参数，因为普通成员函数在编译阶段，会自动添加了入口参数，这样这个函数指针的模板其实就改变了。

9.7 
每日一题 简单贪心 
1631 最小体力消耗路径 dijstra算法与bfs算法的对比理解
点与点之间的最短路径问题可以考虑dijstra算法 这道题并不是直接求的路径和 而是变成了点与点之间的绝对值差值 在松弛的时候要变换一下

9.8
每日一题 大顶堆+贪心 独立解决了hard
1531 概率最大的路径
dijstra算法并不一定是求最短路径，还能是最大路径，最要的想法还是不断找出最符合要求的点，再进行松弛

9.9
每日一题 困难 字符串模拟 分情况进行不同讨论 细心进行分析即可 并不是很困难

9.10
每日一题 前缀和简单题
单调栈解决 next greater element问题 496 503 793
从后向前进行入栈操作，维护一个递减栈，每次的元素与栈顶元素比较，如果大于等于该元素则pop，直到栈空或者栈顶元素大于该元素。ps：每次结束后必须将该元素入栈

9.11
每日一题 数位dp 不太会

9.12 
每日一题 贪心正反各计算一遍 也可以用栈来进行模拟 只不过要统计*的位置
竞赛第二题 5868 将每个元素化为最简分式 再用map确定有多少元素

9.13
每日一题 和昨天竞赛第二题相似
竞赛第四题 细节 将小的map加入大的map中（启发式合并的思想，和并查集中的按秩合并相似）
ps: 启发式算法是基于人类的经验和直观感觉，对一些算法的优化。

9.14
每日一题 双指针对两个string进行对比 判断一个字符串是否包含另一个 时间复杂度为（m+n）；如何确保字典序 对字典进行sort排序即可
ps：判断字符串匹配的时间复杂度：1）可以删除字符 时间复杂度为m+n 不能删除字符 m*n
对于不同数据结构的一部分的使用 可以直接写string(word.begin(), word.end() - 1)这样的形式 而不需要另写一个string
239 此题使用了单调队列 和单调栈类似 

9.15
每日一题 二分查找的二段性 在下一段中一定有需要查找的点且一定不会错过

9.16
每日一题 回溯 一开始这道题我是思考对每一个单词进行搜索 但是这样的话会涉及到一个问题 单词的数量过大 容易超时 所以转变思路 先将单词存入一个set容器中
对board进行暴力搜索 最多搜索10次就结束 然后每次都对set容器中的string进行判定 观察是否满足 然后删除 set容器的查找时间复杂度为常数
208 trie前端数 学习trie的写法（未完成）

9.17
每日一题 简单模拟
382 链表随机节点 学习池塘抽样 不知道数据量大小的情况下 进行抽样

9.18
每日一题 简单
竞赛题第三题卡住

9.19
每日一题 质因数分解
竞赛做了两题

9.20
每日一题 动态规划找最长递增子序列的最大数量
补竞赛第三题

9.21
每日一题 简单的字符串模拟题

9.22
每日一题 均分类型的题目
316 去除重复数组 重点在保证返回的字典序最小 所以使用stack结构 可以pop出元素 将当前元素放置在最恰当的地方

9.30
每日一题 简单

10.2 周赛两题
10.3 周赛两题
模拟竖式除法 用哈希表记录出现过的余数，找到循环小数的起始点

10.4
每日一题 简单字符串模拟 从后向前处理

10.5
每日一题 迭代器的模拟 常规的迭代器基本只有两种操作 判断是否还有下一个元素 返回下一个元素并且将游标后移 题目中
加入了第三种功能 返回下一个元素但是不移动游标 实现这个功能可以提前一步进行next操作

labuladong 
回溯算法集合划分问题 698 主要关注点在于从两个角度对问题进行遍历 1）从数字的角度。对于n个数字，每个数字可以装入k个桶中 
2）对于k个桶，每个桶都可以装n个数字，直到装满为止
这道题涉及到的剪枝操作很多 首先是对数组进行排序操作 然后还有设置start
回溯算法试用时 要尽量保证少量多次 宁可二选一多次 也不要少量k选一

高频面试系列斗地主 695 使用哈希表记录每个元素能否接到前面的序列之后

10.6
每日一题 简单的排序模拟 
labuladong
高频面试系列 字符串乘法 模拟两个字符串相乘 把平常的乘法化简到具体的每个字符相乘

10.7
每日一题 字符串简单模拟
labuladong
高频面试系列 烧饼排序 不是最优解法 每次翻转两次 将最大的烧饼翻转到最底部

10.8
每日一题 哈希表和位运算操作 主要是几个位运算很值得品一品
labuladong
高频面试系列 二分查找高效判定子序列 使用二分查找进行辅助 初始时记录长字符串中出现的字符的位置 使用二分查找缩短每次找到下一个
字符所在位置的时间

10.9
每日一题 困难设计题自己ac 运用有序集合set
高频面试系列 如何高效解决接雨水问题 首先将整体问题转化为每个格子能装多少水 接着写出暴力解法 然后写出备忘录解法 最后进化为双指针

10.10
周赛一题 第二题转化为数轴集合问题 最佳解就是中位数 只需要找到中位数即可 学习到新函数
c++ 快速选择函数 nth_element(begin(numbers), begin(numbers) + count, end(numbers)) 在count前的元素都小于第count个
元素 其后的元素都大于count个元素 但是左右区间不一定有序 数据量大时时间复杂度为n 数据少时为n平方
每日一题 二分查找 一般对于搜索左右区间的二分查找都写成左闭右开的形式

10.11
每日一题 困难题ac 分情况讨论

10.12
每日一题 模拟除法 用加法来实现乘法 和快速幂的想法相似
labuladong 其他算法技巧 运算级优先： 分治算法，将问题划分为细小的部分，再解决小问题，最后合并。
ps：关于switch的使用 在每一个case的结尾记得加break switch每次判定是如果满是case 将一直执行case之后的语句 直到遇到break

10.13
每日一题 简单字符串模拟 从简单情况联系到复杂情况去分析
labuladong 动态规划问题求最小路径和 64 在二维矩阵中求取极值一般都需要使用动态规划或者dfs + 备忘录

10.14
每日一题 剑指Offer 069 二分查找 使用前闭合闭区间 对于区间的移动其实考虑的就是区间的前后闭合性 而对于while循环的判定条件
则是判定对于最后的值是否需要再次判定
labuladong 刷二叉树 222 完全二叉树的节点个数 三种二叉树：
满二叉树（perfect binary tree）每层都是满的
完全二叉树（complete binary tree）除了最后一层外都是满的 最后一层的节点从左到右排列
full binary tree 所有节点要不就有两个孩子节点 要不就没有孩子节点
对于完全二叉树 可以将其节点数转化为满二叉树+完全二叉树 一颗完全二叉树的两颗子树 至少有一颗是满二叉树

10.15
每日一题 38 外观数列 迭代 递归皆可使用 字符串处理
labuladong dp问题 魔塔 174 地下城游戏 dp问题从不同角度进行考虑

10.16
每日一题 dfs + 计算器 282 首先，两个数字之间只有四种情况 + - * 和不变 然后就是计算字符串的数值
labuladong 贪心问题 剪视频 1024 
周赛打了3道题

10.17
每日一题 230 二叉搜索树的特性 其中序遍历为严格递增
周赛打了三题

10.18
每日一题 476 简单位运算 一个数字对所有位均为1的数做异或操作 会返回反码
labuladong dp问题 辐射4 514 自由之路 记忆化搜索或者dp均可解决 注意：min和max的两个值必须类型相同 而size和length函数
返回的是无符号整型 必须先强制转化为int

10.19
每日一题 211 使用前缀树的模板
208 实现Trie 介绍了两种前缀树的模板 我们使用第二种模板 即构造新的数据结构

10.20
每日一题 453 取巧 把集体加变成单个数减

10.21
每日一题 66 简单数组模拟累加
labuladong dp问题 10 字符串的匹配问题要划分到具体的字符上 这是一种状态 而选择则是对于任意一种情况进行处理

10.22
每日一题 290 摩尔投票法的扩展 最简单的就是找数量超过n/2的数字 这里是找数量超过n/k的数字 需要维护k-1个数字
labuladong 岛屿问题利用DFS全部解决

10.23 
每日一题 492 简单的数学模拟题
labuladong 扔鸡蛋问题 在dp的基础上加上二分

10.24
周赛 打出三题
对于第一题 5906 两点注意
1）如何判断一个string中的空格 可以采用istringstream输入流
2）如何判断一个string是否符合标准 可以自己编写一个正则匹配表达式 regex

每日一题 638 大礼包 dfs问题 完全背包？

10.25
每日一题 240 Z字形搜索 74 两次二分

10.26
每日一题 496 对于下一个更大元素 使用单调栈

10.27
每日一题 301 使用DFS发现超时了 使用BFS解决有极值的问题

10.28
每日一题 869 暴力DFS

10.29
每日一题 335 暴力解法会TTL 本质是一个找规律的问题 考察思维能力

10.30
每日一题 260 运算符优先级 以及 相同的数字异或会得到0
周赛做出两个 第三个过了几分钟做出

10.31
每日一题 500 字符串简单模拟
周赛做出了两个 起晚了 第三个也可以ac

11.1
每日一题 575 简单贪心
解决三个脑筋急转弯问题 292 Nim游戏 877 石子游戏 319 灯泡游戏

11.2
每日一题 简单链表
labuladong 解决阶乘含有数字0

11.3
每日一题 接雨水2 实际上是求矩阵中每个点到边界的路径中最大值的最小值 这可以使用djktra算法 求取一定权值的路径的极值

11.4
每日一题 简单二分

11.5
每日一题 数位dp + hash map 用hash表来代替dp数组 降低时间复杂度

11.6
每日一题 简单数组操作 相同的数异或操作为0
labuladong 计算器问题

11.7
每日一题 前缀和的二维版本
周赛做出两道题 补题

11.8
每日一题 简单哈希表模拟

11.9
每日一题 困难的记忆化搜索

11.10
每日一题 简单数组模拟

11.11
每日一题 困难dp
labuladong 计算器问题

11.12
每日一题 常规区间DP

11.13
每日一题 简单字符串模拟
labuladong 回溯算法的总结
周六周赛做出两道

11.14
周日周赛做出三道

11.15
每日一题 脑筋急转弯
回溯问题

11.16
每日一题 困难的矩阵问题

11.17
每日一题 简单的二进制字符模拟

11.18
每日一题 简单二叉树
剑指offer 整数除法 注意特殊情况的处理
到了第三题 求二进制中1的个数

11.19
每日一题 简单递归问题 BFS
剑指 只出现一次的数字 这次是重复数字出现3次 无法用相与来判断 注意对负数的处理 可以用按位与求得是1的bit 按位或把
1赋给想要赋的bit

11.20
每日一题 简单数组哈希
剑指offer 数组第一题

11.21
周赛三题选手
每日一题 简单的多叉树问题

11.22
每日一题 对数组进行随机打乱 每次将随机的数字与最后一个数字交换 这样每次都能缩小随机数的范围
剑指 对于子数组的求和问题 考虑使用同向的双指针

11.23
每日一题 简单字符串模拟
剑指offer

11.24 
每日一题 字符串模拟
剑指offer前缀和

11.25
每日一题
剑指offer前缀和

11.26
每日一题
剑指offer双指针

11.27
每日一题 随机旋转 将二维数组映射为一维 然后进行随机交换
剑指offer滑动窗口
周赛三题 最后一题TLE

11.28
周赛三题 最后一题并查集的恢复问题

11.29
每日一题 堆排序降低时间复杂度
剑指 回文串一题

11.30
每日一题 数位模拟题
剑指 回文串2题 解决 链表一道

12.1
每日一题 简单字符串模拟
剑指 环形链表 注意判断节点为空的特殊情况

12.2
每日一题 简单字符串模拟
剑指 链表两题 链表的递归操作

12.3
每日一题 简单字符串模拟
剑指 链表两题 链表

12.4
每日一题 简单字符串模拟
剑指 链表两题 链表

12.5 
周赛卡在第三题 不应该用BFS 会爆内存
每日一题 经典组合题
1）如何求整数形式的幂级数
2）快速求幂级数
3）对乘法的结果求模，等价于先对每个因子都求模，然后对因子相乘的结果再求模

12.6
每日一题 简单的字符串模拟
剑指offer 循环链表
剑指offer 设计哈希表 并支持随机查询

12.7
每日一题 特殊的岛屿问题
剑指offer 哈希表两题

12.8
每日一题 cv了一道困难题 其实也能做出来 先算一维 再算二维 最后三维
剑指offer 最小时间差 排序和哈希表两种方法

12.9
每日一题 中等字符串模拟
剑指offer 小行星问题 使用栈

12.10
每日一题 简单字符串模拟

12.11 中等二分问题
周赛三题选手

12.12 简单字符串
周赛两题 第三题逻辑乱了

12.13 中等阅读理解题
补了周赛第三题

12.14 困难优先队列问题
剑指offer 困难单调栈
加强版单调栈

12.15 中等拓扑排序
剑指offer 两道简单的队列

12.16 困难滑动窗口
剑指offer 两道队列

12.17 简单的数组模拟
剑指offer 两道队列 （需要区分层与层时，可以考虑使用两个队列）

12.18 每日一题 中等遍历
剑指offer 二叉树剪枝 后序遍历的经典例子

12.19 每日一题 简单入度出度问题
周赛三题

12.20 每日一题 中等二分查找
剑指offer 二叉树的序列化和反序列化
二叉树的深度优先搜索

12.21 每日一题 简单数组模拟
剑指offer 二叉树的搜索

12.22 每日一题 字符串匹配问题（不会  KMP算法）
剑指offer 刷完BST的题目 学会BST的迭代搜索

12.23 每日一题 困难的字符串匹配（字符串哈希入门）

12.24 每日一题 cv

12.25 每日一题 bfs解题
周赛两题             

12.26 每日一题 每日一题简单题
周赛三题

12.27 每日一题 计数排序或者二分

12.28 每日一题 cv困难题 前缀树字符串哈希

12.29 每日一题 简单枚举和回溯

12.30 每日一题 简单

12.31 每日一题 中等哈希表

1.1 每日一题 简单数组模拟 一维数组到二维数组的映射

1.2 每日一题 等差数列模拟
周赛 3题选手
完成二叉树最后一题

1.3 每日一题 计算年份 注意闰年的计算方式
两道 优先级队列的题 注意优先级队列的自定义排序函数的写法，建议使用仿函数

1.4 每日一题 cv困难题
三道前缀树

1.5 每日一题 简单字符串模拟
两道前缀树

1.6 每日一题 中等栈模拟
结束前缀树

1.7 每日一题 简单模拟 但是题意很难理解
两道二分

1.8 每日一题 中等回溯
周赛三题

1.9 每日一题 简单模拟
周赛三题

1.10 每日一题 中等字符串相加
区间问题3道

1.11 每日一题 BFS + 离散化
一道区间排序
一道计数排序 ps：sort自定义排序使用lamda表达式，如果要引用外部的元素，要在[]中使用引用捕获

1.12 每日一题 中等双向遍历

1.13 每日一题 简单题
解决2道合并排序链表

1.14 每日一题 中等双指针
解决很多回溯 刷到700题

1.15 每日一题简单题
回溯解决完毕 一道中等链表

1.16 每日一题 蓄水池抽样
周赛3题

1.17 每日一题 困难dp解决
两道dp

1.18 每日一题 中等排序 计数排序
dp 环形房屋偷盗 

1.19 每日一题 简单哈希表
两道dp

1.20 每日一题 cv的博弈论

1.21 每日一题 困难BFS 自己解决
dp问题

1.22 每日一题 简单字符串
双序列dp问题 不断优化空间复杂度
周赛三题

1.23 每日一题 中等哈希表
周赛三题
补掉周赛最后一题

1.24 每日一题 cv困难题